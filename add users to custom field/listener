import com.atlassian.jira.component.ComponentAccessor
import com.atlassian.jira.event.type.EventDispatchOption
import com.atlassian.jira.issue.ModifiedValue
import com.atlassian.jira.issue.util.DefaultIssueChangeHolder
import com.atlassian.jira.issue.IssueFactory
import com.atlassian.jira.user.ApplicationUser
import org.apache.log4j.Logger
import org.apache.log4j.Level

def log = Logger.getLogger("com.acme.CreateSubtask")
log.setLevel(Level.DEBUG)

ApplicationUser user = ComponentAccessor.getJiraAuthenticationContext().getLoggedInUser();
//def issue = ComponentAccessor.issueManager.getIssueObject("IT-47");
def arrayOfComponents = issue.getComponents();
def cf_id = 10134;
def userList = getCustomFieldValue(issue,cf_id);
def issue = event.issue;

for(def comp in arrayOfComponents){
    if(comp.getName()=="1C"){
      newUserList = ["o.gulomkodirov","r.yumakaev"].collect{getUserByName(it)} + userList?:[]
    }
    if(comp.getName()=="BSS"){
      newUserList = ["d.shorahmedov","a.malikov"].collect{getUserByName(it)} + userList?:[]
    }
}

//log.debug newUserList
//updateCustomFieldValue(issue, cf_id, newUserList, user)
//update(user, issue)

def getCustomFieldValue(issue, Long fieldId) {
issue.getCustomFieldValue(ComponentAccessor.customFieldManager.getCustomFieldObject(fieldId))
}
def updateCustomFieldValue(issue, Long customFieldId, newValue, user) {
def customField = ComponentAccessor.customFieldManager.getCustomFieldObject(customFieldId)
issue.setCustomFieldValue(customField, newValue)
ComponentAccessor.issueManager.updateIssue(user, issue, EventDispatchOption.ISSUE_UPDATED, false)
}
def update(user, issue) {
ComponentAccessor.issueManager.updateIssue(user, issue, EventDispatchOption.ISSUE_UPDATED, false)
}
def getUserByName(String userName) {
ComponentAccessor.userManager.getUserByName(userName)
}
